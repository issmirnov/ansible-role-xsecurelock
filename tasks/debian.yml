---
- name: install compilation prerequisites
  apt:
    pkg:
      - autoconf
      - apache2-utils
      - autotools-dev
      - binutils
      - gcc
      - libc6-dev
      - libpam-dev
      - libx11-dev
      - libxcomposite-dev
      - libxext-dev
      - libxfixes-dev
      - libxft-dev
      - libxmuu-dev
      - libxrandr-dev
      - libxss-dev
      - make
      - pamtester
- name: install optional modules
  apt:
    pkg:
      - mplayer
      - mpv
      - xscreensaver
  when: enable_optional_modules

- name: get git sources
  git:
    repo: https://github.com/google/xsecurelock.git
    dest: "{{ xsecurelock_src_dir }}"
    version: master

- name: run autogen
  shell: sh autogen.sh
  args:
    chdir: "{{ xsecurelock_src_dir }}"
    creates: Makefile.in
  tags:
    - skip_ansible_lint

- name: sanity check that 'common-auth' is present when 'custom_pam_auth' unset
  stat:
    path: /etc/pam.d/common-auth
  register: st
  when: not custom_pam_auth

- name: Flag issue when PAM modules missing
  fail:
    msg: "/etc/pam.d/common-auth does not exist, and no 'custom_pam_auth' set"
  when: not custom_pam_auth and not st.stat.exists

- name: run configure
  shell: ./configure --with-pam-service-name=common-auth
  args:
    chdir: "{{ xsecurelock_src_dir }}"
    creates: Makefile
  tags:
    - skip_ansible_lint

- name: make
  shell: make
  args:
    chdir: "{{ xsecurelock_src_dir }}"
    creates: xsecurelock
  tags:
    - skip_ansible_lint

- name: sudo make install
  shell: make install
  args:
    chdir: "{{ xsecurelock_src_dir }}"
    creates: /usr/local/bin/xsecurelock
  become: yes
  tags:
    - skip_ansible_lint

- name: validate that command works
  shell: /usr/local/bin/xsecurelock --version
  register: xout
  changed_when: False # idempotency
  tags:
    - skip_ansible_lint

- name: flag issue if xsecurelock command failed
  fail:
    msg: "'xsecurelock --version command failed' : {{ xout.stdout }}"
  when: xout.stdout.find('X11 screen lock utility designed for security') == -1
  changed_when: False # idempotency
